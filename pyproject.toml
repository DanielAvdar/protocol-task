[project]
name = "protocol-task"
dynamic = ["version"]
description = "simpler kubeflow pipelines"
authors = [
    {name = "DanielAvdar", email = "66269169+DanielAvdar@users.noreply.github.com"},
]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.9,<4"

keywords = [
    "python",
    "kubeflow",
    "kfp",
    "ml",
    "orchestration",
]
dependencies = [
    "ml-orchestrator>=0.0.14b0",


]
[project.optional-dependencies]
editor = [

    "ml-orchestrator[editor]>=0.0.15b0",
]

[dependency-groups]
dev = [
    "pytest>=7.1.2",
    "hypothesis>=6.23.3",
    "pre-commit>=2.20.0",
    "pre-commit-uv>=4",
    "pytest-cov>=4.0.0",
    "mypy==1.13.0",
    "pytest-parametrization>=2022",
    "ruff>=0.8.2",
]

[tool.hatch.build.targets.sdist]
only-include = ["protocol_task","protocol_task_kfp"]
source = "."

[tool.hatch.build.targets.wheel]
only-include = ["protocol_task","protocol_task_kfp"]
source = "."



[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"



[tool.ruff]
line-length = 120
include = ["pyproject.toml", "tests/**","protocol_task/**","protocol_task_kfp/**","protocol_task_example/**"]

[tool.ruff.lint]
select = ["F", "B", "I", "F", "W", "E","A","N"]

fixable = ["ALL"]

[tool.ruff.lint.isort]
combine-as-imports = true
[tool.mypy]
python_version = "3.11"
disallow_untyped_defs = true
check_untyped_defs = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_optional = false


[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true
